functor : Req{'f : type -> type}. constraint
map : Spec{'f : type -> type}. functor 'f => Spec{'a : type}. Spec{'b : type}. ('a -> 'b) -> 'f 'a -> 'f 'b
map_nested : Spec{'f : type -> type}. Spec{'g : type -> type}. Spec{'a : type}. Spec{'b : type}. (functor 'f * functor 'g) => ('a -> 'b) -> 'f ('g 'a) -> 'f ('g 'b)
