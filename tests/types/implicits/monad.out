monad : (type -> type) -> type
Monad : {'m : type -> type}. {'bs : type}. ({'a : type}. 'a -> 'm 'a * {'a : type}. {'b : 'bs}. 'm 'a -> ('a -> 'm 'b) -> 'm 'b) -> monad 'm
maybe : type -> type
Just : {'a : type}. 'a -> maybe 'a
Nothing : {'a : type}. maybe 'a
monad_maybe : monad maybe
pure : {'m : type -> type}. {'a : type}. monad 'm => 'a -> 'm 'a
>>= : {'m : type -> type}. {'a : type}. {'b : type}. monad 'm => 'm 'a -> ('a -> 'm 'b) -> 'm 'b
<$> : {'m : type -> type}. {'b : type}. {'a : type}. monad 'm => ('a -> 'b) -> 'm 'a -> 'm 'b
>> : {'m : type -> type}. {'b : type}. {'a : type}. monad 'm => 'm 'a -> 'm 'b -> 'm 'b
main : {'b : type}. maybe 'b
