monad : (type -> type) -> constraint
pure : Spec{'m : type -> type}. monad 'm => Spec{'a : type}. 'a -> 'm 'a
>>= : Spec{'m : type -> type}. monad 'm => Spec{'a : type}. Spec{'b : type}. 'm 'a -> ('a -> 'm 'b) -> 'm 'b
identity : type -> type
Identity : Spec{'a : type}. 'a -> identity 'a
test : identity int
