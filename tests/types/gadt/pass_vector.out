natural : type
Z : natural
S : natural -> natural
vect : natural -> type -> type
Nil : Infer{'by : type}. Spec{'n : 'by}. Spec{'a : type}. ('n ~ Z) âŠƒ vect 'n 'a
Cons : Infer{'dh : type}. Spec{'n : 'dh}. Spec{'a : type}. Spec{'k : natural}. ('n ~ S 'k) âŠƒ ('a * vect 'k 'a) -> vect 'n 'a
head : Infer{'a : type}. Infer{'k : natural}. vect (S 'k) 'a -> 'a
tail : Infer{'a : type}. Infer{'k : natural}. vect (S 'k) 'a -> vect 'k 'a
main : int
