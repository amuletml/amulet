print : string -> unit
io_write : string -> unit
- : int -> int -> int
== : int -> int -> bool
natural : type
Z : natural
S : natural -> natural
nat : natural -> type
Zero : Infer{'cx : type}. Spec{'n : 'cx}. ('n ~ Z) âŠƒ nat 'n
Succ : Infer{'du : type}. Spec{'n : 'du}. Spec{'k : natural}. ('n ~ S 'k) âŠƒ nat 'k -> nat 'n
some_nat : type
SomeNat : Spec{'n : natural}. nat 'n -> some_nat
with_natural : Infer{'a : type}. int -> (Spec{'n : natural}. nat 'n -> 'a) -> 'a
main : unit
