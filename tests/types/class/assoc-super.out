== : int -> int -> bool
eq : Req{'a : type}. constraint
=== : Spec{'a : type}. eq 'a => 'a -> 'a -> bool
collection : Req{'a : type}. constraint
elem : Req{'a : type}. type
memq : Spec{'a : type}. collection 'a => elem 'a -> 'a -> bool
insert : Spec{'a : type}. collection 'a => elem 'a -> 'a -> 'a
empty : Spec{'a : type}. collection 'a => 'a
foo : list int
