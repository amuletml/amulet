name:                amuletml
version:             0.1.0.0
synopsis:            A functional programming language
homepage:            https://amulet.ml
license:             BSD3
license-file:        LICENSE
author:              hydraz, squiddev
maintainer:          urn@semi.works
category:            Development
build-type:          Simple
cabal-version:       >=2.0


executable amc
  main-is:             Main.hs
  hs-source-dirs:      compiler
  build-depends:       mtl >= 2.2 && < 2.3
                     , text >= 1.2 && < 1.3
                     , base >= 4.9 && < 4.12
                     , lens >= 4.15 && < 4.17
                     , amulet
                     , monad-gen >= 0.3 && < 0.4
                     , pretty-show

  other-modules:       Errors
  default-extensions:  PackageImports
  default-language:    Haskell2010

  ghc-options: -Wextra -Wall -Wno-name-shadowing -Wno-implicit-prelude

test-suite tests
  type:                exitcode-stdio-1.0
  main-is:             Test.hs
  hs-source-dirs:      compiler
  build-depends:       mtl >= 2.2 && < 2.3
                     , text >= 1.2 && < 1.3
                     , base >= 4.9 && < 4.12
                     , lens >= 4.15 && < 4.17
                     , Diff >= 0.3.4 && < 0.4
                     , HUnit >= 1.6 && < 1.7
                     , tasty >= 1.0 && < 1.1
                     , amulet
                     , hedgehog >= 0.5 && < 0.6
                     , directory >= 1.3 && < 1.4
                     , monad-gen >= 0.3 && < 0.4
                     , containers >= 0.5 && < 0.6
                     , tasty-hunit >= 0.10 && < 0.11
                     , tasty-hedgehog >= 0.2 && < 0.3
  other-modules:       Test.Util

                     , Test.Core.Lint
                     , Test.Core.Backend

                     , Test.Syntax.Gen
                     , Test.Syntax.Resolve

                     , Test.Types.Check
                     , Test.Types.Infer
                     , Test.Types.Util

                     , Test.Parser.Lexer
                     , Test.Parser.Parser
  default-language:    Haskell2010
  default-extensions:  PackageImports
  ghc-options:         -Wextra -Wall -Wno-name-shadowing
                       -Wno-implicit-prelude -Wno-missing-import-lists

executable lexer
  main-is:           Parser/Main.hs
  build-depends:       mtl >= 2.2 && < 2.3
                     , text >= 1.2 && < 1.3
                     , base >= 4.9 && < 4.12
                     , array >= 0.5 && < 0.6
                     , containers >= 0.5 && < 0.6
                     , transformers >= 0.5 && < 0.6
                     , annotated-wl-pprint >= 0.7 && < 0.8
                     , pretty-show
  hs-source-dirs:      src
  default-language:    Haskell2010
  ghc-options: -Wextra -Wall -Wno-name-shadowing
               -Wno-implicit-prelude -Wno-missing-import-lists

  other-modules:       Parser.Error
                     , Parser.Lexer
                     , Parser.Token
                     , Parser.Context
                     , Parser.Wrapper
                     , Parser.Unicode

                     , Text.Pretty
                     , Text.Pretty.Ansi
                     , Text.Pretty.Semantic

                     , Data.Position
                     , Data.Span
                     , Data.Spanned

library amulet
  build-depends:       mtl >= 2.2 && < 2.3
                     , syb >= 0.7 && < 0.8
                     , text >= 1.2 && < 1.3
                     , base >= 4.9 && < 4.12
                     , lens >= 4.15 && < 4.17
                     , array >= 0.5 && < 0.6
                     , monad-gen >= 0.3 && < 0.4
                     , containers >= 0.5 && < 0.6
                     , transformers >= 0.5 && < 0.6
                     , annotated-wl-pprint >= 0.7 && < 0.8
                     , pretty-show

  hs-source-dirs:      src
  default-language:    Haskell2010
  ghc-options: -Wextra -Wall -Wno-name-shadowing
               -Wno-implicit-prelude -Wno-missing-import-lists

  exposed-modules:     Parser
                     , Parser.Error
                     , Parser.Lexer
                     , Parser.Token
                     , Parser.Context
                     , Parser.Wrapper
                     , Parser.Unicode
                     -- the AST
                     , Syntax
                     , Syntax.Let
                     , Syntax.Raise
                     , Syntax.Types
                     , Syntax.Subst
                     , Syntax.Pretty
                     , Syntax.Desugar
                     , Syntax.Transform
                     -- Renamer
                     , Syntax.Resolve
                     , Syntax.Resolve.Scope
                     , Syntax.Resolve.Toplevel
                     -- TC
                     , Types.Infer
                     , Types.Kinds
                     , Types.Unify
                     , Types.Wellformed
                     , Types.Infer.Errors
                     , Types.Infer.Builtin
                     , Types.Infer.Pattern
                     , Types.Infer.Constructor
                     -- Pretty
                     , Text.Pretty
                     , Text.Pretty.Ansi
                     , Text.Pretty.Semantic
                     -- Data
                     , Data.Span
                     , Data.VarMap
                     , Data.VarSet
                     , Data.Triple
                     , Data.Spanned
                     , Data.Position
                     -- Core
                     , Core.Var
                     , Core.Core
                     , Core.Lint
                     , Core.Free
                     , Core.Arity
                     , Core.Lower
                     , Core.Types
                     , Core.Builtin
                     , Core.Optimise
                     , Core.Simplify
                     , Core.Occurrence
                     , Core.Optimise.Reduce
                     , Core.Optimise.Inline
                     , Core.Optimise.Sinking
                     , Core.Optimise.Newtype
                     , Core.Optimise.DeadCode
                     -- Backend
                     , Backend.Lua
                     , Backend.Lua.Emit
                     , Backend.Lua.Syntax
                     , Backend.Lua.Postprocess

                     , Backend.Escape
                     -- Infra
                     , Control.Monad.Infer
                     , Control.Monad.Infer.Error
